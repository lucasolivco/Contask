# ✅ BUILD STAGE
FROM node:18-alpine AS builder

WORKDIR /app
COPY package*.json ./
RUN npm ci
COPY . .
RUN npm run build

# ✅ NGINX STAGE
FROM nginx:alpine AS runner

# Copiar build
COPY --from=builder /app/dist /usr/share/nginx/html

# Configuração nginx customizada
COPY docker/nginx/frontend.conf /etc/nginx/conf.d/default.conf

# Criar usuário
RUN adduser -D -s /bin/sh www-data

# Ajustar permissões
RUN chown -R www-data:www-data /usr/share/nginx/html
RUN chown -R www-data:www-data /var/cache/nginx

USER www-data

EXPOSE 80

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost/health || exit 1

CMD ["nginx", "-g", "daemon off;"]