# --- ESTÁGIO DE BUILD ---
FROM node:20-slim AS builder
WORKDIR /app

# copiar package.json e lockfile primeiro para aproveitar cache
COPY package*.json ./
RUN npm ci

# copiar schema/prisma antes de gerar client
COPY prisma ./prisma

# gerar prisma client já no ambiente debian/slim
RUN npx prisma generate

# copiar resto do código e construir
COPY . .
RUN npm run build

# --- ESTÁGIO FINAL ---
FROM node:20-slim AS runner

RUN apt-get update && apt-get install -y curl dumb-init libssl3 ca-certificates && rm -rf /var/lib/apt/lists/*

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 --ingroup nodejs backend

WORKDIR /app

COPY --from=builder --chown=backend:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=backend:nodejs /app/dist ./dist
COPY --from=builder --chown=backend:nodejs /app/prisma ./prisma
COPY --from=builder --chown=backend:nodejs /app/package.json ./

RUN mkdir -p /app/uploads /app/logs
RUN chown -R backend:nodejs /app

USER backend
EXPOSE 3001
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:3001/api/health || exit 1

ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "dist/server.js"]

